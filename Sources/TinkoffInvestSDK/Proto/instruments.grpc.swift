//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: instruments.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


///Сервис предназначен для получения:</br>**1**. информации об инструментах;</br>**2**.
///расписания торговых сессий;</br>**3**. календаря выплат купонов по облигациям;</br>**4**.
///размера гарантийного обеспечения по фьючерсам;</br>**5**. дивидендов по ценной бумаге.
///
/// Usage: instantiate `Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceClient`, then call methods of this protocol to make API calls.
public protocol Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceClientInterceptorFactoryProtocol? { get }

  func tradingSchedules(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesRequest, Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesResponse>

  func bondBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_BondResponse>

  func bonds(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_BondsResponse>

  func getBondCoupons(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsResponse>

  func currencyBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_CurrencyResponse>

  func currencies(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_CurrenciesResponse>

  func etfBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_EtfResponse>

  func etfs(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_EtfsResponse>

  func futureBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_FutureResponse>

  func futures(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_FuturesResponse>

  func shareBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_ShareResponse>

  func shares(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_SharesResponse>

  func getAccruedInterests(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsResponse>

  func getFuturesMargin(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginResponse>

  func getInstrumentBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_InstrumentResponse>

  func getDividends(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsResponse>

  func getAssetBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_AssetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_AssetRequest, Tinkoff_Public_Invest_Api_Contract_V1_AssetResponse>

  func getAssets(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_AssetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_AssetsRequest, Tinkoff_Public_Invest_Api_Contract_V1_AssetsResponse>

  func getFavorites(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesResponse>

  func editFavorites(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesRequest, Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesResponse>
}

extension Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceClientProtocol {
  public var serviceName: String {
    return "tinkoff.public.invest.api.contract.v1.InstrumentsService"
  }

  ///Метод получения расписания торгов торговых площадок.
  ///
  /// - Parameters:
  ///   - request: Request to send to TradingSchedules.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func tradingSchedules(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesRequest, Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/TradingSchedules",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTradingSchedulesInterceptors() ?? []
    )
  }

  ///Метод получения облигации по её идентификатору.
  ///
  /// - Parameters:
  ///   - request: Request to send to BondBy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func bondBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_BondResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/BondBy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBondByInterceptors() ?? []
    )
  }

  ///Метод получения списка облигаций.
  ///
  /// - Parameters:
  ///   - request: Request to send to Bonds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func bonds(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_BondsResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/Bonds",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBondsInterceptors() ?? []
    )
  }

  ///Метод получения графика выплат купонов по облигации
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBondCoupons.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBondCoupons(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBondCoupons",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBondCouponsInterceptors() ?? []
    )
  }

  ///Метод получения валюты по её идентификатору.
  ///
  /// - Parameters:
  ///   - request: Request to send to CurrencyBy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func currencyBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_CurrencyResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/CurrencyBy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCurrencyByInterceptors() ?? []
    )
  }

  ///Метод получения списка валют.
  ///
  /// - Parameters:
  ///   - request: Request to send to Currencies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func currencies(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_CurrenciesResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/Currencies",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCurrenciesInterceptors() ?? []
    )
  }

  ///Метод получения инвестиционного фонда по его идентификатору.
  ///
  /// - Parameters:
  ///   - request: Request to send to EtfBy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func etfBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_EtfResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/EtfBy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEtfByInterceptors() ?? []
    )
  }

  ///Метод получения списка инвестиционных фондов.
  ///
  /// - Parameters:
  ///   - request: Request to send to Etfs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func etfs(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_EtfsResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/Etfs",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEtfsInterceptors() ?? []
    )
  }

  ///Метод получения фьючерса по его идентификатору.
  ///
  /// - Parameters:
  ///   - request: Request to send to FutureBy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func futureBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_FutureResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/FutureBy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFutureByInterceptors() ?? []
    )
  }

  ///Метод получения списка фьючерсов.
  ///
  /// - Parameters:
  ///   - request: Request to send to Futures.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func futures(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_FuturesResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/Futures",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFuturesInterceptors() ?? []
    )
  }

  ///Метод получения акции по её идентификатору.
  ///
  /// - Parameters:
  ///   - request: Request to send to ShareBy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func shareBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_ShareResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/ShareBy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeShareByInterceptors() ?? []
    )
  }

  ///Метод получения списка акций.
  ///
  /// - Parameters:
  ///   - request: Request to send to Shares.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func shares(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_SharesResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/Shares",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSharesInterceptors() ?? []
    )
  }

  ///Метод получения накопленного купонного дохода по облигации.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccruedInterests.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAccruedInterests(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAccruedInterests",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccruedInterestsInterceptors() ?? []
    )
  }

  ///Метод получения размера гарантийного обеспечения по фьючерсам.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFuturesMargin.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getFuturesMargin(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFuturesMargin",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFuturesMarginInterceptors() ?? []
    )
  }

  ///Метод получения основной информации об инструменте.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInstrumentBy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getInstrumentBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_InstrumentResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetInstrumentBy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInstrumentByInterceptors() ?? []
    )
  }

  ///Метод для получения событий выплаты дивидендов по инструменту.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDividends.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getDividends(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetDividends",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDividendsInterceptors() ?? []
    )
  }

  ///Метод получения актива по его идентификатору.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAssetBy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAssetBy(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_AssetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_AssetRequest, Tinkoff_Public_Invest_Api_Contract_V1_AssetResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssetBy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssetByInterceptors() ?? []
    )
  }

  ///Метод получения списка активов.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAssets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAssets(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_AssetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_AssetsRequest, Tinkoff_Public_Invest_Api_Contract_V1_AssetsResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssetsInterceptors() ?? []
    )
  }

  ///Метод получения избранных инструментов.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFavorites.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getFavorites(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFavorites",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFavoritesInterceptors() ?? []
    )
  }

  ///Метод редактирования избранных инструментов.
  ///
  /// - Parameters:
  ///   - request: Request to send to EditFavorites.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func editFavorites(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesRequest, Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.InstrumentsService/EditFavorites",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditFavoritesInterceptors() ?? []
    )
  }
}

public protocol Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'tradingSchedules'.
  func makeTradingSchedulesInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesRequest, Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesResponse>]

  /// - Returns: Interceptors to use when invoking 'bondBy'.
  func makeBondByInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_BondResponse>]

  /// - Returns: Interceptors to use when invoking 'bonds'.
  func makeBondsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_BondsResponse>]

  /// - Returns: Interceptors to use when invoking 'getBondCoupons'.
  func makeGetBondCouponsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsResponse>]

  /// - Returns: Interceptors to use when invoking 'currencyBy'.
  func makeCurrencyByInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_CurrencyResponse>]

  /// - Returns: Interceptors to use when invoking 'currencies'.
  func makeCurrenciesInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_CurrenciesResponse>]

  /// - Returns: Interceptors to use when invoking 'etfBy'.
  func makeEtfByInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_EtfResponse>]

  /// - Returns: Interceptors to use when invoking 'etfs'.
  func makeEtfsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_EtfsResponse>]

  /// - Returns: Interceptors to use when invoking 'futureBy'.
  func makeFutureByInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_FutureResponse>]

  /// - Returns: Interceptors to use when invoking 'futures'.
  func makeFuturesInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_FuturesResponse>]

  /// - Returns: Interceptors to use when invoking 'shareBy'.
  func makeShareByInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_ShareResponse>]

  /// - Returns: Interceptors to use when invoking 'shares'.
  func makeSharesInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_SharesResponse>]

  /// - Returns: Interceptors to use when invoking 'getAccruedInterests'.
  func makeGetAccruedInterestsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsResponse>]

  /// - Returns: Interceptors to use when invoking 'getFuturesMargin'.
  func makeGetFuturesMarginInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginResponse>]

  /// - Returns: Interceptors to use when invoking 'getInstrumentBy'.
  func makeGetInstrumentByInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_InstrumentResponse>]

  /// - Returns: Interceptors to use when invoking 'getDividends'.
  func makeGetDividendsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsResponse>]

  /// - Returns: Interceptors to use when invoking 'getAssetBy'.
  func makeGetAssetByInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_AssetRequest, Tinkoff_Public_Invest_Api_Contract_V1_AssetResponse>]

  /// - Returns: Interceptors to use when invoking 'getAssets'.
  func makeGetAssetsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_AssetsRequest, Tinkoff_Public_Invest_Api_Contract_V1_AssetsResponse>]

  /// - Returns: Interceptors to use when invoking 'getFavorites'.
  func makeGetFavoritesInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesResponse>]

  /// - Returns: Interceptors to use when invoking 'editFavorites'.
  func makeEditFavoritesInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesRequest, Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesResponse>]
}

public final class Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceClient: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the tinkoff.public.invest.api.contract.v1.InstrumentsService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

///Сервис предназначен для получения:</br>**1**. информации об инструментах;</br>**2**.
///расписания торговых сессий;</br>**3**. календаря выплат купонов по облигациям;</br>**4**.
///размера гарантийного обеспечения по фьючерсам;</br>**5**. дивидендов по ценной бумаге.
///
/// To build a server, implement a class that conforms to this protocol.
public protocol Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceProvider: CallHandlerProvider {
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceServerInterceptorFactoryProtocol? { get }

  ///Метод получения расписания торгов торговых площадок.
  func tradingSchedules(request: Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesResponse>

  ///Метод получения облигации по её идентификатору.
  func bondBy(request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_BondResponse>

  ///Метод получения списка облигаций.
  func bonds(request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_BondsResponse>

  ///Метод получения графика выплат купонов по облигации
  func getBondCoupons(request: Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsResponse>

  ///Метод получения валюты по её идентификатору.
  func currencyBy(request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_CurrencyResponse>

  ///Метод получения списка валют.
  func currencies(request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_CurrenciesResponse>

  ///Метод получения инвестиционного фонда по его идентификатору.
  func etfBy(request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_EtfResponse>

  ///Метод получения списка инвестиционных фондов.
  func etfs(request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_EtfsResponse>

  ///Метод получения фьючерса по его идентификатору.
  func futureBy(request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_FutureResponse>

  ///Метод получения списка фьючерсов.
  func futures(request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_FuturesResponse>

  ///Метод получения акции по её идентификатору.
  func shareBy(request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_ShareResponse>

  ///Метод получения списка акций.
  func shares(request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_SharesResponse>

  ///Метод получения накопленного купонного дохода по облигации.
  func getAccruedInterests(request: Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsResponse>

  ///Метод получения размера гарантийного обеспечения по фьючерсам.
  func getFuturesMargin(request: Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginResponse>

  ///Метод получения основной информации об инструменте.
  func getInstrumentBy(request: Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentResponse>

  ///Метод для получения событий выплаты дивидендов по инструменту.
  func getDividends(request: Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsResponse>

  ///Метод получения актива по его идентификатору.
  func getAssetBy(request: Tinkoff_Public_Invest_Api_Contract_V1_AssetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_AssetResponse>

  ///Метод получения списка активов.
  func getAssets(request: Tinkoff_Public_Invest_Api_Contract_V1_AssetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_AssetsResponse>

  ///Метод получения избранных инструментов.
  func getFavorites(request: Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesResponse>

  ///Метод редактирования избранных инструментов.
  func editFavorites(request: Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesResponse>
}

extension Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceProvider {
  public var serviceName: Substring { return "tinkoff.public.invest.api.contract.v1.InstrumentsService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "TradingSchedules":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesResponse>(),
        interceptors: self.interceptors?.makeTradingSchedulesInterceptors() ?? [],
        userFunction: self.tradingSchedules(request:context:)
      )

    case "BondBy":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_BondResponse>(),
        interceptors: self.interceptors?.makeBondByInterceptors() ?? [],
        userFunction: self.bondBy(request:context:)
      )

    case "Bonds":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_BondsResponse>(),
        interceptors: self.interceptors?.makeBondsInterceptors() ?? [],
        userFunction: self.bonds(request:context:)
      )

    case "GetBondCoupons":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsResponse>(),
        interceptors: self.interceptors?.makeGetBondCouponsInterceptors() ?? [],
        userFunction: self.getBondCoupons(request:context:)
      )

    case "CurrencyBy":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_CurrencyResponse>(),
        interceptors: self.interceptors?.makeCurrencyByInterceptors() ?? [],
        userFunction: self.currencyBy(request:context:)
      )

    case "Currencies":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_CurrenciesResponse>(),
        interceptors: self.interceptors?.makeCurrenciesInterceptors() ?? [],
        userFunction: self.currencies(request:context:)
      )

    case "EtfBy":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_EtfResponse>(),
        interceptors: self.interceptors?.makeEtfByInterceptors() ?? [],
        userFunction: self.etfBy(request:context:)
      )

    case "Etfs":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_EtfsResponse>(),
        interceptors: self.interceptors?.makeEtfsInterceptors() ?? [],
        userFunction: self.etfs(request:context:)
      )

    case "FutureBy":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_FutureResponse>(),
        interceptors: self.interceptors?.makeFutureByInterceptors() ?? [],
        userFunction: self.futureBy(request:context:)
      )

    case "Futures":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_FuturesResponse>(),
        interceptors: self.interceptors?.makeFuturesInterceptors() ?? [],
        userFunction: self.futures(request:context:)
      )

    case "ShareBy":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_ShareResponse>(),
        interceptors: self.interceptors?.makeShareByInterceptors() ?? [],
        userFunction: self.shareBy(request:context:)
      )

    case "Shares":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_SharesResponse>(),
        interceptors: self.interceptors?.makeSharesInterceptors() ?? [],
        userFunction: self.shares(request:context:)
      )

    case "GetAccruedInterests":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsResponse>(),
        interceptors: self.interceptors?.makeGetAccruedInterestsInterceptors() ?? [],
        userFunction: self.getAccruedInterests(request:context:)
      )

    case "GetFuturesMargin":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginResponse>(),
        interceptors: self.interceptors?.makeGetFuturesMarginInterceptors() ?? [],
        userFunction: self.getFuturesMargin(request:context:)
      )

    case "GetInstrumentBy":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentResponse>(),
        interceptors: self.interceptors?.makeGetInstrumentByInterceptors() ?? [],
        userFunction: self.getInstrumentBy(request:context:)
      )

    case "GetDividends":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsResponse>(),
        interceptors: self.interceptors?.makeGetDividendsInterceptors() ?? [],
        userFunction: self.getDividends(request:context:)
      )

    case "GetAssetBy":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_AssetRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_AssetResponse>(),
        interceptors: self.interceptors?.makeGetAssetByInterceptors() ?? [],
        userFunction: self.getAssetBy(request:context:)
      )

    case "GetAssets":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_AssetsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_AssetsResponse>(),
        interceptors: self.interceptors?.makeGetAssetsInterceptors() ?? [],
        userFunction: self.getAssets(request:context:)
      )

    case "GetFavorites":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesResponse>(),
        interceptors: self.interceptors?.makeGetFavoritesInterceptors() ?? [],
        userFunction: self.getFavorites(request:context:)
      )

    case "EditFavorites":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesResponse>(),
        interceptors: self.interceptors?.makeEditFavoritesInterceptors() ?? [],
        userFunction: self.editFavorites(request:context:)
      )

    default:
      return nil
    }
  }
}

public protocol Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsServiceServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'tradingSchedules'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeTradingSchedulesInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesRequest, Tinkoff_Public_Invest_Api_Contract_V1_TradingSchedulesResponse>]

  /// - Returns: Interceptors to use when handling 'bondBy'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBondByInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_BondResponse>]

  /// - Returns: Interceptors to use when handling 'bonds'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBondsInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_BondsResponse>]

  /// - Returns: Interceptors to use when handling 'getBondCoupons'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetBondCouponsInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetBondCouponsResponse>]

  /// - Returns: Interceptors to use when handling 'currencyBy'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCurrencyByInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_CurrencyResponse>]

  /// - Returns: Interceptors to use when handling 'currencies'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCurrenciesInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_CurrenciesResponse>]

  /// - Returns: Interceptors to use when handling 'etfBy'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEtfByInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_EtfResponse>]

  /// - Returns: Interceptors to use when handling 'etfs'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEtfsInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_EtfsResponse>]

  /// - Returns: Interceptors to use when handling 'futureBy'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeFutureByInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_FutureResponse>]

  /// - Returns: Interceptors to use when handling 'futures'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeFuturesInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_FuturesResponse>]

  /// - Returns: Interceptors to use when handling 'shareBy'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeShareByInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_ShareResponse>]

  /// - Returns: Interceptors to use when handling 'shares'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSharesInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentsRequest, Tinkoff_Public_Invest_Api_Contract_V1_SharesResponse>]

  /// - Returns: Interceptors to use when handling 'getAccruedInterests'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAccruedInterestsInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetAccruedInterestsResponse>]

  /// - Returns: Interceptors to use when handling 'getFuturesMargin'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetFuturesMarginInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetFuturesMarginResponse>]

  /// - Returns: Interceptors to use when handling 'getInstrumentBy'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetInstrumentByInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_InstrumentRequest, Tinkoff_Public_Invest_Api_Contract_V1_InstrumentResponse>]

  /// - Returns: Interceptors to use when handling 'getDividends'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetDividendsInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsResponse>]

  /// - Returns: Interceptors to use when handling 'getAssetBy'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAssetByInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_AssetRequest, Tinkoff_Public_Invest_Api_Contract_V1_AssetResponse>]

  /// - Returns: Interceptors to use when handling 'getAssets'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetAssetsInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_AssetsRequest, Tinkoff_Public_Invest_Api_Contract_V1_AssetsResponse>]

  /// - Returns: Interceptors to use when handling 'getFavorites'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetFavoritesInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetFavoritesResponse>]

  /// - Returns: Interceptors to use when handling 'editFavorites'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEditFavoritesInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesRequest, Tinkoff_Public_Invest_Api_Contract_V1_EditFavoritesResponse>]
}
