//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: stoporders.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Сервис предназначен для работы со стоп-заявками:</br> **1**.
///выставление;</br> **2**. отмена;</br> **3**. получение списка стоп-заявок.
///
/// Usage: instantiate `Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceClient`, then call methods of this protocol to make API calls.
public protocol Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceClientInterceptorFactoryProtocol? { get }

  func postStopOrder(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderResponse>

  func getStopOrders(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersResponse>

  func cancelStopOrder(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderResponse>
}

extension Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceClientProtocol {
  public var serviceName: String {
    return "tinkoff.public.invest.api.contract.v1.StopOrdersService"
  }

  ///Метод выставления стоп-заявки.
  ///
  /// - Parameters:
  ///   - request: Request to send to PostStopOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func postStopOrder(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.StopOrdersService/PostStopOrder",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePostStopOrderInterceptors() ?? []
    )
  }

  ///Метод получения списка активных стоп заявок по счёту.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetStopOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getStopOrders(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.StopOrdersService/GetStopOrders",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetStopOrdersInterceptors() ?? []
    )
  }

  ///Метод отмены стоп-заявки.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelStopOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func cancelStopOrder(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.StopOrdersService/CancelStopOrder",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelStopOrderInterceptors() ?? []
    )
  }
}

public protocol Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'postStopOrder'.
  func makePostStopOrderInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'getStopOrders'.
  func makeGetStopOrdersInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelStopOrder'.
  func makeCancelStopOrderInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderResponse>]
}

public final class Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceClient: Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the tinkoff.public.invest.api.contract.v1.StopOrdersService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Сервис предназначен для работы со стоп-заявками:</br> **1**.
///выставление;</br> **2**. отмена;</br> **3**. получение списка стоп-заявок.
///
/// To build a server, implement a class that conforms to this protocol.
public protocol Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceProvider: CallHandlerProvider {
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceServerInterceptorFactoryProtocol? { get }

  ///Метод выставления стоп-заявки.
  func postStopOrder(request: Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderResponse>

  ///Метод получения списка активных стоп заявок по счёту.
  func getStopOrders(request: Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersResponse>

  ///Метод отмены стоп-заявки.
  func cancelStopOrder(request: Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderResponse>
}

extension Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceProvider {
  public var serviceName: Substring { return "tinkoff.public.invest.api.contract.v1.StopOrdersService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "PostStopOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderResponse>(),
        interceptors: self.interceptors?.makePostStopOrderInterceptors() ?? [],
        userFunction: self.postStopOrder(request:context:)
      )

    case "GetStopOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersResponse>(),
        interceptors: self.interceptors?.makeGetStopOrdersInterceptors() ?? [],
        userFunction: self.getStopOrders(request:context:)
      )

    case "CancelStopOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderResponse>(),
        interceptors: self.interceptors?.makeCancelStopOrderInterceptors() ?? [],
        userFunction: self.cancelStopOrder(request:context:)
      )

    default:
      return nil
    }
  }
}

public protocol Tinkoff_Public_Invest_Api_Contract_V1_StopOrdersServiceServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'postStopOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePostStopOrderInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_PostStopOrderResponse>]

  /// - Returns: Interceptors to use when handling 'getStopOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetStopOrdersInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetStopOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'cancelStopOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelStopOrderInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_CancelStopOrderResponse>]
}
