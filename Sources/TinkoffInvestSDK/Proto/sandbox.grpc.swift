//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: sandbox.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


///Сервис для работы с песочницей TINKOFF INVEST API
///
/// Usage: instantiate `Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceClient`, then call methods of this protocol to make API calls.
public protocol Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceClientInterceptorFactoryProtocol? { get }

  func openSandboxAccount(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountRequest, Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountResponse>

  func getSandboxAccounts(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsResponse>

  func closeSandboxAccount(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountRequest, Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountResponse>

  func postSandboxOrder(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PostOrderRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PostOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_PostOrderResponse>

  func getSandboxOrders(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersResponse>

  func cancelSandboxOrder(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderResponse>

  func getSandboxOrderState(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOrderStateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOrderStateRequest, Tinkoff_Public_Invest_Api_Contract_V1_OrderState>

  func getSandboxPositions(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse>

  func getSandboxOperations(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest, Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse>

  func getSandboxPortfolio(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse>

  func sandboxPayIn(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInRequest, Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInResponse>
}

extension Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceClientProtocol {
  public var serviceName: String {
    return "tinkoff.public.invest.api.contract.v1.SandboxService"
  }

  ///Метод регистрации счёта в песочнице.
  ///
  /// - Parameters:
  ///   - request: Request to send to OpenSandboxAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func openSandboxAccount(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountRequest, Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.SandboxService/OpenSandboxAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeOpenSandboxAccountInterceptors() ?? []
    )
  }

  ///Метод получения счетов в песочнице.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSandboxAccounts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSandboxAccounts(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxAccounts",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSandboxAccountsInterceptors() ?? []
    )
  }

  ///Метод закрытия счёта в песочнице.
  ///
  /// - Parameters:
  ///   - request: Request to send to CloseSandboxAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func closeSandboxAccount(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountRequest, Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.SandboxService/CloseSandboxAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCloseSandboxAccountInterceptors() ?? []
    )
  }

  ///Метод выставления торгового поручения в песочнице.
  ///
  /// - Parameters:
  ///   - request: Request to send to PostSandboxOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func postSandboxOrder(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PostOrderRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PostOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_PostOrderResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.SandboxService/PostSandboxOrder",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePostSandboxOrderInterceptors() ?? []
    )
  }

  ///Метод получения списка активных заявок по счёту в песочнице.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSandboxOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSandboxOrders(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxOrders",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSandboxOrdersInterceptors() ?? []
    )
  }

  ///Метод отмены торгового поручения в песочнице.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelSandboxOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func cancelSandboxOrder(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.SandboxService/CancelSandboxOrder",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelSandboxOrderInterceptors() ?? []
    )
  }

  ///Метод получения статуса заявки в песочнице.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSandboxOrderState.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSandboxOrderState(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOrderStateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOrderStateRequest, Tinkoff_Public_Invest_Api_Contract_V1_OrderState> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxOrderState",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSandboxOrderStateInterceptors() ?? []
    )
  }

  ///Метод получения позиций по виртуальному счёту песочницы.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSandboxPositions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSandboxPositions(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxPositions",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSandboxPositionsInterceptors() ?? []
    )
  }

  ///Метод получения операций в песочнице по номеру счёта.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSandboxOperations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSandboxOperations(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest, Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxOperations",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSandboxOperationsInterceptors() ?? []
    )
  }

  ///Метод получения портфолио в песочнице.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSandboxPortfolio.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSandboxPortfolio(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxPortfolio",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSandboxPortfolioInterceptors() ?? []
    )
  }

  ///Метод пополнения счёта в песочнице.
  ///
  /// - Parameters:
  ///   - request: Request to send to SandboxPayIn.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func sandboxPayIn(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInRequest, Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInResponse> {
    return self.makeUnaryCall(
      path: "/tinkoff.public.invest.api.contract.v1.SandboxService/SandboxPayIn",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSandboxPayInInterceptors() ?? []
    )
  }
}

public protocol Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'openSandboxAccount'.
  func makeOpenSandboxAccountInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountRequest, Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'getSandboxAccounts'.
  func makeGetSandboxAccountsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsResponse>]

  /// - Returns: Interceptors to use when invoking 'closeSandboxAccount'.
  func makeCloseSandboxAccountInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountRequest, Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'postSandboxOrder'.
  func makePostSandboxOrderInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PostOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_PostOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'getSandboxOrders'.
  func makeGetSandboxOrdersInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelSandboxOrder'.
  func makeCancelSandboxOrderInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'getSandboxOrderState'.
  func makeGetSandboxOrderStateInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetOrderStateRequest, Tinkoff_Public_Invest_Api_Contract_V1_OrderState>]

  /// - Returns: Interceptors to use when invoking 'getSandboxPositions'.
  func makeGetSandboxPositionsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse>]

  /// - Returns: Interceptors to use when invoking 'getSandboxOperations'.
  func makeGetSandboxOperationsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest, Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse>]

  /// - Returns: Interceptors to use when invoking 'getSandboxPortfolio'.
  func makeGetSandboxPortfolioInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse>]

  /// - Returns: Interceptors to use when invoking 'sandboxPayIn'.
  func makeSandboxPayInInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInRequest, Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInResponse>]
}

public final class Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceClient: Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the tinkoff.public.invest.api.contract.v1.SandboxService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

///Сервис для работы с песочницей TINKOFF INVEST API
///
/// To build a server, implement a class that conforms to this protocol.
public protocol Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceProvider: CallHandlerProvider {
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceServerInterceptorFactoryProtocol? { get }

  ///Метод регистрации счёта в песочнице.
  func openSandboxAccount(request: Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountResponse>

  ///Метод получения счетов в песочнице.
  func getSandboxAccounts(request: Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsResponse>

  ///Метод закрытия счёта в песочнице.
  func closeSandboxAccount(request: Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountResponse>

  ///Метод выставления торгового поручения в песочнице.
  func postSandboxOrder(request: Tinkoff_Public_Invest_Api_Contract_V1_PostOrderRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_PostOrderResponse>

  ///Метод получения списка активных заявок по счёту в песочнице.
  func getSandboxOrders(request: Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersResponse>

  ///Метод отмены торгового поручения в песочнице.
  func cancelSandboxOrder(request: Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderResponse>

  ///Метод получения статуса заявки в песочнице.
  func getSandboxOrderState(request: Tinkoff_Public_Invest_Api_Contract_V1_GetOrderStateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_OrderState>

  ///Метод получения позиций по виртуальному счёту песочницы.
  func getSandboxPositions(request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse>

  ///Метод получения операций в песочнице по номеру счёта.
  func getSandboxOperations(request: Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse>

  ///Метод получения портфолио в песочнице.
  func getSandboxPortfolio(request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse>

  ///Метод пополнения счёта в песочнице.
  func sandboxPayIn(request: Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInResponse>
}

extension Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceProvider {
  public var serviceName: Substring { return "tinkoff.public.invest.api.contract.v1.SandboxService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "OpenSandboxAccount":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountResponse>(),
        interceptors: self.interceptors?.makeOpenSandboxAccountInterceptors() ?? [],
        userFunction: self.openSandboxAccount(request:context:)
      )

    case "GetSandboxAccounts":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsResponse>(),
        interceptors: self.interceptors?.makeGetSandboxAccountsInterceptors() ?? [],
        userFunction: self.getSandboxAccounts(request:context:)
      )

    case "CloseSandboxAccount":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountResponse>(),
        interceptors: self.interceptors?.makeCloseSandboxAccountInterceptors() ?? [],
        userFunction: self.closeSandboxAccount(request:context:)
      )

    case "PostSandboxOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_PostOrderRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_PostOrderResponse>(),
        interceptors: self.interceptors?.makePostSandboxOrderInterceptors() ?? [],
        userFunction: self.postSandboxOrder(request:context:)
      )

    case "GetSandboxOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersResponse>(),
        interceptors: self.interceptors?.makeGetSandboxOrdersInterceptors() ?? [],
        userFunction: self.getSandboxOrders(request:context:)
      )

    case "CancelSandboxOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderResponse>(),
        interceptors: self.interceptors?.makeCancelSandboxOrderInterceptors() ?? [],
        userFunction: self.cancelSandboxOrder(request:context:)
      )

    case "GetSandboxOrderState":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_GetOrderStateRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_OrderState>(),
        interceptors: self.interceptors?.makeGetSandboxOrderStateInterceptors() ?? [],
        userFunction: self.getSandboxOrderState(request:context:)
      )

    case "GetSandboxPositions":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse>(),
        interceptors: self.interceptors?.makeGetSandboxPositionsInterceptors() ?? [],
        userFunction: self.getSandboxPositions(request:context:)
      )

    case "GetSandboxOperations":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse>(),
        interceptors: self.interceptors?.makeGetSandboxOperationsInterceptors() ?? [],
        userFunction: self.getSandboxOperations(request:context:)
      )

    case "GetSandboxPortfolio":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse>(),
        interceptors: self.interceptors?.makeGetSandboxPortfolioInterceptors() ?? [],
        userFunction: self.getSandboxPortfolio(request:context:)
      )

    case "SandboxPayIn":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInRequest>(),
        responseSerializer: ProtobufSerializer<Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInResponse>(),
        interceptors: self.interceptors?.makeSandboxPayInInterceptors() ?? [],
        userFunction: self.sandboxPayIn(request:context:)
      )

    default:
      return nil
    }
  }
}

public protocol Tinkoff_Public_Invest_Api_Contract_V1_SandboxServiceServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'openSandboxAccount'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeOpenSandboxAccountInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountRequest, Tinkoff_Public_Invest_Api_Contract_V1_OpenSandboxAccountResponse>]

  /// - Returns: Interceptors to use when handling 'getSandboxAccounts'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSandboxAccountsInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetAccountsResponse>]

  /// - Returns: Interceptors to use when handling 'closeSandboxAccount'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCloseSandboxAccountInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountRequest, Tinkoff_Public_Invest_Api_Contract_V1_CloseSandboxAccountResponse>]

  /// - Returns: Interceptors to use when handling 'postSandboxOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePostSandboxOrderInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PostOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_PostOrderResponse>]

  /// - Returns: Interceptors to use when handling 'getSandboxOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSandboxOrdersInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'cancelSandboxOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelSandboxOrderInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderRequest, Tinkoff_Public_Invest_Api_Contract_V1_CancelOrderResponse>]

  /// - Returns: Interceptors to use when handling 'getSandboxOrderState'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSandboxOrderStateInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetOrderStateRequest, Tinkoff_Public_Invest_Api_Contract_V1_OrderState>]

  /// - Returns: Interceptors to use when handling 'getSandboxPositions'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSandboxPositionsInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse>]

  /// - Returns: Interceptors to use when handling 'getSandboxOperations'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSandboxOperationsInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest, Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse>]

  /// - Returns: Interceptors to use when handling 'getSandboxPortfolio'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetSandboxPortfolioInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse>]

  /// - Returns: Interceptors to use when handling 'sandboxPayIn'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSandboxPayInInterceptors() -> [ServerInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInRequest, Tinkoff_Public_Invest_Api_Contract_V1_SandboxPayInResponse>]
}
